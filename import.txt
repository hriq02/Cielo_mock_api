https://www.youtube.com/watch?v=dFFpjjD9cj4


- choose an DB (i will try maybe postgres, if not possible i will try sqlite)
- follow the part of the drivers and after that: https://github.com/typeorm/typeorm

caminho das api:
    api/public/v2/token/
    api/public/v2/orders/
    api/public/v1/products/
    
- basicamente a idéia é o seguinte, a pessoa cria uma authenticação.
- com a autenticação pode criar um link
- depois pode ser feito uma consulta do link

-tentar usar o Nestjs parece muito bom
-usar ou Nestjs ou Express ou Ts.ED


link do manual da cielo no github.io
https://developercielo.github.io/manual/linkdepagamentos5


TORUN:
    //se caso for necessairo
    bun init
    bun install

CREATE TABLE links(
  id 													CHAR(30) 		NOT NULL PRIMARY KEY,
  order_number 								INTEGER(64)
  type 												CHAR(255) 	NOT NULL
  name 												CHAR(128) 	NOT NULL
  description 								CHAR(256) 
  show_description 						BOOLEAN 		DEFAULT(FALSE)
  price 											INTEGER			NOT NULL
  expiration_date							CHAR(10)		
  weight											INTEGER
  soft_descriptor							CHAR(13)
  max_number_of_Installments	INTEGER(2)
  quantity										INTEGER(2)
  sku													CHAR(32)
  shipping_name								CHAR(128)		
  shipping_price							INTEGER
  shipping_type								CHAR(8)
  origin_zip_code							CHAR(255)
  short_url										CHAR(10)
);

CREATE TABLE recorrent(
  id 									CHAR(30) 			NOT NULL PRIMARY KEY,
  interval						INTEGER(10)
  end_date						CHAR(10)
  amount							INTEGER
  day									INTEGER(2)
  next_payment_date		CHAR(10)
);


let text : string = '{"OrderNumber": "123456",  "type": "Digital","name": "Pedido","description": "teste description","price": "1000000","weight": 2000000,"expirationDate": "2027-06-19 16:30:00","maxNumberOfInstallments": "1","quantity": 2,"sku": "teste","shipping": {  "type": "WithoutShipping",  "name": "teste",  "price": "1000000000"},"recurrent": {  "interval": "Monthly","endDate": "2024-02-06"},"softDescriptor": "Pedido1234"}';
let finalNumber : number = 0;

let utf8Encode = new TextEncoder();
Array.from(utf8Encode.encode(text)).map((value,index) => {finalNumber += value * 125});

console.log(finalNumber);

let vf : number = 0;
let sobra : number = 0;
finalNumber
    .toString()
    .split("")
    .map(value => {
        vf += Number(value);
        if(vf >= 255){
            sobra = 255 - vf;
            vf = 255;
        }
        console.log(vf,sobra);
    })




{
  "OrderNumber": "123456",  
  "type": "Digital",
  "name": "Pedido",
  "description": "teste description",
  "price": "1000000",
  "weight": 2000000,
  "expirationDate": "2027-06-19 16:30:00",
  "maxNumberOfInstallments": "1",
  "quantity": 2,
  "sku": "teste",
  "shipping": {
    "type": "WithoutShipping",
    "name": "teste",
    "price": "1000000000"
  },
  "recurrent": {
    "interval": "Monthly",
    "endDate": "2024-02-06"
  },
  "softDescriptor": "Pedido1234"
}



https://www.youtube.com/watch?v=c74zNWoCJiA